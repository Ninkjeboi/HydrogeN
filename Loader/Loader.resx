<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ptbProfile.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        v+n+b+P/2Q==
</value>
  </data>
</root>